[["Map",1,2,9,10],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.4.2","content-config-digest","0274a5f3219e1ed7","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":4321,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":true},\"markdown\":{\"syntaxHighlight\":\"shiki\",\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":false,\"responsiveImages\":false,\"serializeConfig\":false},\"legacy\":{\"collections\":false}}","blog",["Map",11,12,31,32,50,51,70,71],"dotfiles",{"id":11,"data":13,"body":18,"filePath":19,"digest":20,"rendered":21,"legacyId":30},{"title":14,"pub_date":15,"subtitle":16,"draft":17},"configuration galore (dotfiles)",["Date","2023-12-07T00:00:00.000Z"],"or why organizing them is still procrastination",false,"I enjoy consistency. When we strive to do our best, the less you have to worry about, the easier it is to focus on the actually challenging part.\n\nI've come to love the 'keyboard-centric' way of computing, and I do believe that your computer can become an extension of yourself, in the sense that all relevant actions are almost second nature. In that vein, I'd like to share why you should care about your own dotfiles, and how I manage mine.\n\nLet's backtrack a bit. What are dotfiles anyway?\nDot files are configuration files, and they, unsurprisingly, usually start with a dot (files starting with a dot are automatically hidden in most UNIX systems). Think `.gitconfig`, the `.config` directory on Linux, or even VSCode's `settings.json`. These are all files that define how a user will experience a certain program or command line utility.\n\nUnfortunately, not all programs have sensible defaults, and when they do, you might not like them. Everytime I boot a new game, I go straight to 'settings' to configure things \"my way\" (disabling motion blur first and foremost), and so if I use a program for long enough, it usually ends up getting its config file(s) saved on source control.\n\n**_\"Why take the time though?\"_**\n\nTo get more confident! Getting stuck in the 'productivity' hole is a real issue, but at the same time, it shouldn't take much for you to figure out if any of the things that you do on a daily basis can be made faster and/or less error-prone.\nYou might come to realize that everyday, when you turn on your PC, you manually\nclose all those programs that auto start on boot. Wouldn't it be better to just\ndisable them? That's how you can get started, by identifying (and getting rid of) the smallest bumps on your workflow.\n\nPersonally, I'd rather have a config file written down, even if I'll never look at it again, so I can avoid wasting time in case my computer goes bad. There are definitely many levels of redundancy you can choose from. Start simply, but with intent, and build up on it.\n\nI won't be going super in depth on the specific since they should be all public! As\ndevelopment always is, it's a work in progress, but my [dotfiles](https://github.com/gusluchetti/dots) repository should contain explanations on why things are the way they are. Most of the existing content is relevant to Fedora, but I've been slowly adding things for Windows while making sure it's as cross-platform as possible.\n\nI've been using [chezmoi](https://www.chezmoi.io/) for the past year or so. \nIt touts itself as a 'personal home directory' manager, and comes with a LOT of bells and whistles. It extends on 'standard' source control, and enables templating for more specific home directory configuration for different operating systems, which is very useful to me since I go back and forth a bit between Windows/Mac/Linux.\n\nThat's basically it! I will definitely expand on specific configurations that are\nessential to my day to day PC use, and possibly on a more well-defined system, but for now, I'd rather get a good foundation going.","src/content/blog/dotfiles.md","cd661e745f166b42",{"html":22,"metadata":23},"\u003Cp>I enjoy consistency. When we strive to do our best, the less you have to worry about, the easier it is to focus on the actually challenging part.\u003C/p>\n\u003Cp>I’ve come to love the ‘keyboard-centric’ way of computing, and I do believe that your computer can become an extension of yourself, in the sense that all relevant actions are almost second nature. In that vein, I’d like to share why you should care about your own dotfiles, and how I manage mine.\u003C/p>\n\u003Cp>Let’s backtrack a bit. What are dotfiles anyway?\nDot files are configuration files, and they, unsurprisingly, usually start with a dot (files starting with a dot are automatically hidden in most UNIX systems). Think \u003Ccode>.gitconfig\u003C/code>, the \u003Ccode>.config\u003C/code> directory on Linux, or even VSCode’s \u003Ccode>settings.json\u003C/code>. These are all files that define how a user will experience a certain program or command line utility.\u003C/p>\n\u003Cp>Unfortunately, not all programs have sensible defaults, and when they do, you might not like them. Everytime I boot a new game, I go straight to ‘settings’ to configure things “my way” (disabling motion blur first and foremost), and so if I use a program for long enough, it usually ends up getting its config file(s) saved on source control.\u003C/p>\n\u003Cp>\u003Cstrong>\u003Cem>“Why take the time though?”\u003C/em>\u003C/strong>\u003C/p>\n\u003Cp>To get more confident! Getting stuck in the ‘productivity’ hole is a real issue, but at the same time, it shouldn’t take much for you to figure out if any of the things that you do on a daily basis can be made faster and/or less error-prone.\nYou might come to realize that everyday, when you turn on your PC, you manually\nclose all those programs that auto start on boot. Wouldn’t it be better to just\ndisable them? That’s how you can get started, by identifying (and getting rid of) the smallest bumps on your workflow.\u003C/p>\n\u003Cp>Personally, I’d rather have a config file written down, even if I’ll never look at it again, so I can avoid wasting time in case my computer goes bad. There are definitely many levels of redundancy you can choose from. Start simply, but with intent, and build up on it.\u003C/p>\n\u003Cp>I won’t be going super in depth on the specific since they should be all public! As\ndevelopment always is, it’s a work in progress, but my \u003Ca href=\"https://github.com/gusluchetti/dots\">dotfiles\u003C/a> repository should contain explanations on why things are the way they are. Most of the existing content is relevant to Fedora, but I’ve been slowly adding things for Windows while making sure it’s as cross-platform as possible.\u003C/p>\n\u003Cp>I’ve been using \u003Ca href=\"https://www.chezmoi.io/\">chezmoi\u003C/a> for the past year or so.\nIt touts itself as a ‘personal home directory’ manager, and comes with a LOT of bells and whistles. It extends on ‘standard’ source control, and enables templating for more specific home directory configuration for different operating systems, which is very useful to me since I go back and forth a bit between Windows/Mac/Linux.\u003C/p>\n\u003Cp>That’s basically it! I will definitely expand on specific configurations that are\nessential to my day to day PC use, and possibly on a more well-defined system, but for now, I’d rather get a good foundation going.\u003C/p>",{"headings":24,"localImagePaths":25,"remoteImagePaths":26,"frontmatter":27,"imagePaths":29},[],[],[],{"title":14,"subtitle":16,"pub_date":28,"draft":17},["Date","2023-12-07T00:00:00.000Z"],[],"dotfiles.md","getting-over-it",{"id":31,"data":33,"body":37,"filePath":38,"digest":39,"rendered":40,"legacyId":49},{"title":34,"pub_date":35,"subtitle":36,"draft":17},"getting over it",["Date","2023-11-13T00:00:00.000Z"],"or how I finally got this website off the ground","So you're working on a project, and you're almost done! Great work.\nJust need to touch this up, review this piece of code, update this css file, test a new font, etc.\n\nAh, the dreaded [ninety-ninety rule](https://en.wikipedia.org/wiki/Ninety%e2%80%93ninety_rule).\nHow can you feel so close to your goal, yet feel like you're days away at the same time?\n\nI think that's how I'm feeling at the moment, after riding the high of rebuilding this website.\nI had tried Gatsby/Firebase before as the main framework and host, respectively,\nbut I couldn't quite get the hang of the UI framework, which was Chakra, so I dropped\nthe project after a couple of days (this was in late 2021!).\n\nAfter two LONG years, and with a newfound interest in coding as a hobby, looking to\nget back into the job market, I thought that I'd be a great idea to finally get back\nand complete my blog/website project, a place where I could publish my own articles,\nlet people know how to find me, how things were going, etc.\n\nAfter weeks of configuring my new Linux/Neovim setup (why not procrastinate a bit longer, right?),\nI was ready to start! A bit of research later, I figured Zola would be a good fit,\ngiven the simplicity of the project, a static website generator was more than enough. \nFirst days went smoothly, getting back into the groove of working with basic HTML/CSS,\nand figuring out how Zola's template system worked. And then the issues started piling up.\nResponsiveness wasn't how I liked it, added a CSS helper ([Tachyons](http://tachyons.io/), \nwhich might've complicated things even further), translation was not as seamless as \nI thought I'd be, dark/light mode also wasn't working properly.\n\nFeels exactly like when you're two achievements away of getting 100% in a game, but\nthey're just the grindiest most boring achievements ever known to man so you end up\nplaying for 5 more hours when you'd rather do anything else.\n\nIn any case, nothing that can't be solved. I won't force myself to do something I\ndon't want to, but I'm also not going to drop the project (obviously). While I'm\nnot employed, I'll use my free time to work on building better habits, and I'll keep\nworking on this website until I am completely happy with it (might never happen, but still).\n\nThis is my first blog post ever, so thank you very much for reading!","src/content/blog/getting-over-it.md","573785592836ccfd",{"html":41,"metadata":42},"\u003Cp>So you’re working on a project, and you’re almost done! Great work.\nJust need to touch this up, review this piece of code, update this css file, test a new font, etc.\u003C/p>\n\u003Cp>Ah, the dreaded \u003Ca href=\"https://en.wikipedia.org/wiki/Ninety%e2%80%93ninety_rule\">ninety-ninety rule\u003C/a>.\nHow can you feel so close to your goal, yet feel like you’re days away at the same time?\u003C/p>\n\u003Cp>I think that’s how I’m feeling at the moment, after riding the high of rebuilding this website.\nI had tried Gatsby/Firebase before as the main framework and host, respectively,\nbut I couldn’t quite get the hang of the UI framework, which was Chakra, so I dropped\nthe project after a couple of days (this was in late 2021!).\u003C/p>\n\u003Cp>After two LONG years, and with a newfound interest in coding as a hobby, looking to\nget back into the job market, I thought that I’d be a great idea to finally get back\nand complete my blog/website project, a place where I could publish my own articles,\nlet people know how to find me, how things were going, etc.\u003C/p>\n\u003Cp>After weeks of configuring my new Linux/Neovim setup (why not procrastinate a bit longer, right?),\nI was ready to start! A bit of research later, I figured Zola would be a good fit,\ngiven the simplicity of the project, a static website generator was more than enough.\nFirst days went smoothly, getting back into the groove of working with basic HTML/CSS,\nand figuring out how Zola’s template system worked. And then the issues started piling up.\nResponsiveness wasn’t how I liked it, added a CSS helper (\u003Ca href=\"http://tachyons.io/\">Tachyons\u003C/a>,\nwhich might’ve complicated things even further), translation was not as seamless as\nI thought I’d be, dark/light mode also wasn’t working properly.\u003C/p>\n\u003Cp>Feels exactly like when you’re two achievements away of getting 100% in a game, but\nthey’re just the grindiest most boring achievements ever known to man so you end up\nplaying for 5 more hours when you’d rather do anything else.\u003C/p>\n\u003Cp>In any case, nothing that can’t be solved. I won’t force myself to do something I\ndon’t want to, but I’m also not going to drop the project (obviously). While I’m\nnot employed, I’ll use my free time to work on building better habits, and I’ll keep\nworking on this website until I am completely happy with it (might never happen, but still).\u003C/p>\n\u003Cp>This is my first blog post ever, so thank you very much for reading!\u003C/p>",{"headings":43,"localImagePaths":44,"remoteImagePaths":45,"frontmatter":46,"imagePaths":48},[],[],[],{"title":34,"subtitle":36,"pub_date":47,"draft":17},["Date","2023-11-13T00:00:00.000Z"],[],"getting-over-it.md","neovim",{"id":50,"data":52,"body":57,"filePath":58,"digest":59,"rendered":60,"legacyId":69},{"title":53,"pub_date":54,"subtitle":55,"draft":56},"vscode -> emacs -> neovim",["Date","2023-12-06T00:00:00.000Z"],"or how I swear I played Witcher 3's starting quest at least 6 times",true,"So I wanted to get back into learning web dev by trying out React\nfor a bit. Cool. An hour in, I get mad I can't auto format, and supposedly\nthe installed LSP (emmetls) is being weird.\n\nOkay, I'll just download a formatting plugin. Oh, there's like 4 options with no \ndiscerning qualities, and their README's are lackluster? (mostly on me since\nI don't understand neovim that well yet, but still). \nEdit my dotfiles, things are not working.\nDotfiles were remote, pull them down. Okay! Formatting done!\n\nAaaand I'm sucked right back in. Let's redo it all and finally get it this time!!\n\nAfter fiddling a bit with my existing config, I thought this would be a good time\nfor a complete reset. Armed with kickstart.nvim, I managed to get quite the config,\nand very quickly at that, just by adding my mods on top of the foundations that\nkickstart.nvim builds.\n\n...","src/content/blog/neovim.md","637fe46232e084df",{"html":61,"metadata":62},"\u003Cp>So I wanted to get back into learning web dev by trying out React\nfor a bit. Cool. An hour in, I get mad I can’t auto format, and supposedly\nthe installed LSP (emmetls) is being weird.\u003C/p>\n\u003Cp>Okay, I’ll just download a formatting plugin. Oh, there’s like 4 options with no\ndiscerning qualities, and their README’s are lackluster? (mostly on me since\nI don’t understand neovim that well yet, but still).\nEdit my dotfiles, things are not working.\nDotfiles were remote, pull them down. Okay! Formatting done!\u003C/p>\n\u003Cp>Aaaand I’m sucked right back in. Let’s redo it all and finally get it this time!!\u003C/p>\n\u003Cp>After fiddling a bit with my existing config, I thought this would be a good time\nfor a complete reset. Armed with kickstart.nvim, I managed to get quite the config,\nand very quickly at that, just by adding my mods on top of the foundations that\nkickstart.nvim builds.\u003C/p>\n\u003Cp>…\u003C/p>",{"headings":63,"localImagePaths":64,"remoteImagePaths":65,"frontmatter":66,"imagePaths":68},[],[],[],{"title":53,"subtitle":55,"pub_date":67,"draft":56},["Date","2023-12-06T00:00:00.000Z"],[],"neovim.md","webdev",{"id":70,"data":72,"body":76,"filePath":77,"digest":78,"rendered":79,"legacyId":88},{"title":73,"pub_date":74,"subtitle":75,"draft":56},"rediscovering web dev",["Date","2023-12-20T00:00:00.000Z"],"or how 'hello world's are pretty heavy these days","It's time to get serious. What is happening with web development? I leave for a bit\nand when I come back there's SSR, RSC, hydration this, runtime that. Oh boy.\n\nThis probably won't stop being a draft, and if it does, props to me. This is a way\nto document me actually trying to understand all the terms behind web dev, and my\nattempt to get something really performant and slim working.\n\nNow, what web dev work have I done before? Besides my current work, which I'd rather\nnot go into, I worked mostly with Angular. Not fun, but not that bad. Lots of\nexisting components, and the ones we needed to add were pretty sturdy, so not much\nworry there. Very boilerplate-y, but it worked!\n\nI'm at a point where I need to define (or at the very least, advise on) a new stack\nfor work. Front, back end, db, you name it. Lots of work, but lots of opportunity to\ngrow. So here I am, attempting to make sense of all the things going on in web\ndevelopment.\n\nHTML, calls a js script, said script runs, and brings back more html. Ok.\n\nGlossary:\n- HMR: Hot Module Replacement","src/content/blog/webdev.md","54e45762f6dff833",{"html":80,"metadata":81},"\u003Cp>It’s time to get serious. What is happening with web development? I leave for a bit\nand when I come back there’s SSR, RSC, hydration this, runtime that. Oh boy.\u003C/p>\n\u003Cp>This probably won’t stop being a draft, and if it does, props to me. This is a way\nto document me actually trying to understand all the terms behind web dev, and my\nattempt to get something really performant and slim working.\u003C/p>\n\u003Cp>Now, what web dev work have I done before? Besides my current work, which I’d rather\nnot go into, I worked mostly with Angular. Not fun, but not that bad. Lots of\nexisting components, and the ones we needed to add were pretty sturdy, so not much\nworry there. Very boilerplate-y, but it worked!\u003C/p>\n\u003Cp>I’m at a point where I need to define (or at the very least, advise on) a new stack\nfor work. Front, back end, db, you name it. Lots of work, but lots of opportunity to\ngrow. So here I am, attempting to make sense of all the things going on in web\ndevelopment.\u003C/p>\n\u003Cp>HTML, calls a js script, said script runs, and brings back more html. Ok.\u003C/p>\n\u003Cp>Glossary:\u003C/p>\n\u003Cul>\n\u003Cli>HMR: Hot Module Replacement\u003C/li>\n\u003C/ul>",{"headings":82,"localImagePaths":83,"remoteImagePaths":84,"frontmatter":85,"imagePaths":87},[],[],[],{"title":73,"subtitle":75,"pub_date":86,"draft":56},["Date","2023-12-20T00:00:00.000Z"],[],"webdev.md"]